GPU Vegetation in OpenIG
04.Mar.2015, ComPro, Nick

    The  visual database generated from TerraVista is not comming with any supportive
files/information about the models placed in the database, as it is done with visual
databases generated by TrianBuilder, so there is a need to parse the database and collect
all the informations about the vegetation in, like texture used, position of trees/bushes ..
scale/size etc. For this purpose a parser is in place and that is the veggen application

    The veggen application can work in two modes: 1) only parse the database and prints
out the texture used so one might recoginze these texture for further setup 2) generate
vegetation files used by OpenIG. These vegetatoion files are simply binary arrays of osg::Vec3
(three floats) with file name prefixes of the name of the tile ending by a number and ".vegbin"
extension. For generation of these files and then later use by OpenIG, a configuration xml file
is needed where one specifies how ion real-time objects of trees/bushes are replaced by GPU
textured geometry. This config xml file needs to be the same on generation by veggen and by OpenIG.

    When you run veggen --help the following output is produced:

    Usage: veggen [options] filename ...
    Options:
      --config <filename>
                        Use this config xml
      --help-all        Display all command line, env vars and keyboard & mouse
                        bindings.
      --help-env        Display environmental variables available
      --help-keys       Display keyboard & mouse bindings available
      --print           Prints all the textures used in the file
      --printDetails    Prints details about the vegetation geometry
      --substitute string
                        substitute the string in the output vegetation file with the
                        replacement string
      --with string     the replacement string
      -h or --help      Display command line parameters

    The relevant options are --config (here the config files go, if none specified VegetationInfo.xml
will be defaulted). We will discuss the content later. --substitute string1 --with string2 are handy
options for string substitution in the outputed files - obviously one will generate two versions of
the same database, one with vegetation to be parsed and used for .vegbin files generation, and
another without vegetation for run time where the vegetation will ve generated on the GPU. So there
might be difference in the filenames of the tiles across these two versions of databases. So here is
an example:

    1. a database with vegetation in (to be parsed) where files are named as
       OPENIG_WITH_VEGETATION_X_Y.osgb
    2. a database without vegetation, for the runtime where files are named as
       OPENIG_WITHOUT_VEGETATION_X_Y.osgb

    the command then will be

    veggen --config VegetationInfo.xml --substitute WITH --with WITHOUT OPENIG_WITH_VEGETATION_X_Y.osgb

    The output will be several ".vegbin" like OPENIG_WITHOUT_VEGETATION_X_Y.0.vegbin. This substitution
can be done too with sed on Linux/Mac, for Windows one might need to download some helper utility, and
this is the main reason for the existance of these two options and their functionality.

    Following is a sample of the config xml:

    <OpenIG-Vegetation-Config>
        <Vegetation-Type>Crossed-TriangleFans</Vegetation-Type>
        <LOD-Range>100000</LOD-Range>
        <Pattern>OPEN_IG_NO_TREE_TIME2_17_28</Pattern>
        <Vegetation-Info>
            <Objects>red_pine01.dds spruce01.dds pine02.dds</Objects>
            <Texture>/home/nick/work/db/OPEN_IG_TREE_TIME2_/spruce01.dds</Texture>
            <UV>0 0 1 1</UV>
            <Height>20.0</Height>
            <Width>10.0</Width>
            <Scale>1.0</Scale>
        </Vegetation-Info>
        <Vegetation-Info>
            <Objects>pine03.dds pine01.dds juniper01.dds shrub01.dds</Objects>
            <Texture>/home/nick/work/db/OPEN_IG_TREE_TIME2_/juniper01.dds</Texture>
            <UV>0 0 1 1</UV>
            <Height>20.0</Height>
            <Width>10.0</Width>
            <Scale>1.0</Scale>
        </Vegetation-Info>
    </OpenIG-Vegetation-Config>

    The Vegetation-Type node is for type of geometry to be used. can be either Crossed-Triangles or
Billboards. As of the time of writing this readme, only Crossed-Triangles are supported.
    LOD-Range is used as a range of the LOD node that is placed on top of the GPU generated vegetation.
These two nodes are used by the run time only (OpenIG)

    For generatiom with veggen, Vegetation-Info is used, some parts are used by OpenIG as well.
    Objects are these trees/bushes from the database holding the specified textures to be replaced
in run time by the Texture, with the UV mapping. Height, Width and Scale are for now reserved for
future use by the run-time and are not currently supported. From the example above, from the original
visual database, vegetation with the following textures: red_pine01.dds, spruce01.dds, pine02.dds will
be replaced by GPU generated vegetation with the following texture: home/nick/work/db/OPEN_IG_TREE_TIME2_/spruce01.dds
using the UV mapping of 0 0 1 1.

    Once the ".vegbin" files are generated, they have to be placed in the folder of the version of the
visual database without pre-generated vegetation, since the run-time will search for them there. The
other tool available is vegviewer, which can be used by the modeller as a pre-view how the GPU vegetation
will look like in OpenIG.

    vegviewer has the following syntax: vegviewer [option] filename. The relevant options here are
--config fileName.xml and --pattern string1. The config filename is the name of the config file defaulted
to VegetationInfo.xml of the same file used by veggen for generation of the ".veggen" files. The
--pattern options tell the database reader what files to filter for GPU processing. From the example
above one can do the following:

    vegviewer --config VegetationInfo.xml --pattern OPENIG_WITH_VEGETATION master.flt.osgb

    The --pattern option is for performance, to avoid parsing in runtime files that are not tiles
and do not contain any vegetation.

    Now the real thing. How the viewing is managed in OpenIG. The plugin responsible for GPU vegetation
is libIgPlugin-GPUVegetation.so (on Linux, the extension differs on Mac&Windows).

    And finaly don't forget in openig.xml to enable the plugin. Sample is here:

    <OpenIG-Config>
        <ShadowedScene-minLightMargin>10.0</ShadowedScene-minLightMargin>
        <ShadowedScene-maxFarPlane>1000.0</ShadowedScene-maxFarPlane>
        <ShadowedScene-texSize>512</ShadowedScene-texSize>
        <ShadowedScene-baseTexUnit>0</ShadowedScene-baseTexUnit>
        <ShadowedScene-shadowTexUnit>1</ShadowedScene-shadowTexUnit>
    </OpenIG-Config>
    <ImageGenerator-Plugins-Config>
        <Plugin>
            <Order-Number>1</Order-Number>
            <Name>SilverLining</Name>
        </Plugin>
        <Plugin>
            <Order-Number>-1</Order-Number>
            <Name>SimpleLighting</Name>
        </Plugin>
        <Plugin>
            <Order-Number>-2</Order-Number>
            <Name>GPUVegetation</Name>
        </Plugin>
    </ImageGenerator-Plugins-Config>


